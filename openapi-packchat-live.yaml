openapi: 3.1.0

info:
  title: packchat live Internal API
  description: API to service packchat live app
  version: 0.1.0
  contact:
    name: packchat
    url: https://www.packchat.com/
    email: hello@packchat.com

servers:
  - url: https://live-staging.packchat.com/api/0.1.0
    description: Staging server
  - url: https://live.packchat.com/api/0.1.0
    description: Production server

security:
  - BearerAuth: []

tags:
  - name: Authentication
    description: Endpoints for user authentication and authorization
  - name: User
    description: Endpoints for user specific actions
  - name: Chats
    description: Endpoints for managing chats

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    VerifyOTPRequest:
      type: object
      required:
        - user_uuid
        - otp
      properties:
        user_uuid:
          type: string
          description: Unique identifier of the user
        otp:
          type: string
          description: One-time password to verify

    VerifyOTPResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT authentication token
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3BhY2tjaGF0LWxpdmUudGVzdC9hcGkvMC4xLjAvYXV0aC92ZXJpZnktb3RwIiwiaWF0IjoxNzM2NzI4MTYwLCJleHAiOjE3MzY3MzE3NjAsIm5iZiI6MTczNjcyODE2MCwianRpIjoiMHMzWHlTV1RtUVBoSms2NSIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.Veu17fgYX-gdGx4KwY-mej8YhVOP0KtmtugF7b9ui1Y"

    RequestOTPRequest:
      type: object
      required:
        - phone
        - phone_country
        - device_id
        - device_model
        - device_type
      properties:
        phone:
          type: string
          example: "+447973521888"
          description: Phone number in E.164 format
        phone_country:
          type: string
          example: "GB"
          description: Two-letter ISO country code
        device_id:
          type: string
          description: Unique identifier for the device
        device_model:
          type: string
          description: Model name/identifier of the device
        device_type:
          type: string
          enum: [ios]
          description: Type of device platform

    RequestOTPResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"

    UserResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"
        phone_normalized:
          type: string
          example: "447973521888"
        phone_national:
          type: string
          example: "07973521888"
        phone_e164:
          type: string
          example: "+447973521888"
        phone_hash:
          type: string
          example: "7fcfbad1b738a392f605de34b89555a42c74c76bead7be1d5b3b80fed1edb51f"
        phone_country:
          type: string
          example: "GB"
        verified_at:
          type: string
          format: date-time
          nullable: true
        onboarded_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          example: "2025-01-12T22:31:59.000000Z"
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        name:
          type: string
          example: " "
        display_name:
          type: string
          nullable: true
        debug:
          type: object
          properties:
            otp:
              type: string
              example: "123456"

    CreatorResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        name:
          type: string
          example: " "
        display_name:
          type: string
          nullable: true
        debug:
          type: object
          properties:
            otp:
              type: string
              example: "123456"

    ChatResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Advanced Trading Techniques"
        slug:
          type: string
          example: "advanced-trading-techniques"
        image_url:
          type: string
          nullable: true
          example: "https://example.com/images/channel.jpg"
        description:
          type: string
          nullable: true
          example: "Learn advanced trading techniques from expert traders"
        status:
          type: string
          enum: [draft, published, cancelled]
          example: "published"
        session_start:
          type: string
          format: date-time
          example: "2025-02-01T15:00:00.000000Z"
        session_end:
          type: string
          format: date-time
          example: "2025-02-01T16:30:00.000000Z"
        session_duration:
          type: integer
          example: 90
          description: Duration in minutes
        entry_amount:
          type: number
          format: decimal
          example: 1000.00
        currency:
          type: string
          example: "GBP"
        stream_channel_id:
          type: string
          example: "stream_123"
        registration_count:
          type: integer
          example: 10
        max_participants:
          type: integer
          nullable: true
          example: 100
        schedule_status:
          type: string
          enum: [past, upcoming]
          example: "upcoming"
        creators:
          type: array
          items:
            $ref: '#/components/schemas/CreatorResponse'
        created_at:
          type: string
          format: date-time
          example: "2025-01-12T22:31:59.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-01-12T22:31:59.000000Z"

    ChatCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatResponse'
        links:
          type: object
          properties:
            first:
              type: string
              example: "https://live.packchat.com/api/0.1.0/chats?page=1"
            last:
              type: string
              example: "https://live.packchat.com/api/0.1.0/chats?page=1"
            prev:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
        meta:
          type: object
          properties:
            current_page:
              type: integer
              example: 1
            from:
              type: integer
              example: 1
            last_page:
              type: integer
              example: 1
            links:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                    nullable: true
                  label:
                    type: string
                  active:
                    type: boolean
            path:
              type: string
              example: "https://live.packchat.com/api/0.1.0/chats"
            per_page:
              type: integer
              example: 15
            to:
              type: integer
              example: 10
            total:
              type: integer
              example: 10

    UpdateNameRequest:
      type: object
      required:
        - first_name
        - last_name
      properties:
        first_name:
          type: string
          minLength: 2
          maxLength: 50
          example: "John"
        last_name:
          type: string
          minLength: 2
          maxLength: 50
          example: "Smith"

    UpdateDisplayNameRequest:
      type: object
      required:
        - first_name
        - last_name
      properties:
        display_name:
          type: string
          minLength: 2
          maxLength: 50
          example: "John Doe"

paths:
  /auth/request-otp:
    post:
      tags:
        - Authentication
      summary: Request an OTP for phone verification
      description: Initiates the phone verification process by requesting a one-time password
      operationId: requestOTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOTPRequest'
      responses:
        '200':
          description: OTP request successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestOTPResponse'
        '400':
          description: Invalid request parameters
        '429':
          description: Too many requests
  /auth/verify-otp:
    post:
      tags:
        - Authentication
      summary: Verify OTP and get authentication token
      description: Verifies the one-time password and returns a JWT token for authentication
      operationId: verifyOTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTPRequest'
      responses:
        '200':
          description: OTP verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTPResponse'
        '400':
          description: Invalid request parameters
        '401':
          description: Invalid OTP
        '422':
          description: User not found
        '429':
          description: Too many requests

  /users/me:
    get:
      tags:
        - User
      summary: Get the currently authenticated user object
      description: Returns the currently authenticated user object with all properties.
      operationId: usersMe
      responses:
        '200':
          description: OTP verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /users/me/chats:
    get:
      tags:
        - User
      summary: List all users chats
      description: Returns a paginated list of chats, with optional filtering for the authenticated user
      operationId: listUserChats
      parameters:
        - in: query
          name: filter[status]
          schema:
            type: string
            enum: [complete, upcoming, in_progress, cancelled]
          description: Filter by chat status
        - in: query
          name: filter[stream_channel_id]
          schema:
            type: string
          description: Filter by GetStream Channel UUID
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCollection'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized

  /chats:
    get:
      tags:
        - Chats
      summary: List all chats
      description: Returns a paginated list of chats, with optional filtering
      operationId: listChats
      parameters:
        - in: query
          name: filter[status]
          schema:
            type: string
            enum: [completed, upcoming, in_progress, cancelled]
          description: Filter by chat status
        - in: query
          name: filter[stream_channel_id]
          schema:
            type: string
          description: Filter by GetStream Channel UUID
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCollection'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized

  /chats/{uuid}:
    get:
      tags:
        - Chats
      summary: Get a specific chat
      description: Returns detailed information about a specific chat
      operationId: getChat
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the channel
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized
        '404':
          description: Chat not found

  /users/me/name:
    put:
      tags:
        - User
      summary: Update user's name
      description: Updates the authenticated user's first and last name
      operationId: updateUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNameRequest'
      responses:
        '200':
          description: Name updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /users/me/display-name:
    put:
      tags:
        - User
      summary: Update user's display name
      description: Updates the authenticated user's display name
      operationId: updateUserDisplayName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDisplayNameRequest'
      responses:
        '200':
          description: Name updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors


  /users/me/avatar:
    post:
      tags:
        - User
      summary: Upload or update user's avatar
      description: Updates the authenticated user's avatar image
      operationId: updateUserAvatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - avatar
              properties:
                avatar:
                  type: string
                  format: binary
                  description: Image file (JPEG, PNG, or WebP)
      responses:
        '200':
          description: Avatar updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
                    properties:
                      avatar:
                        type: array
                        items:
                          type: string
                        example:
                          - "The avatar field must be an image."
                          - "The avatar field must not be greater than 5MB."
                          - "The avatar must be at least 100x100 pixels."

  /users/me/onboarded:
    post:
      tags:
        - User
      summary: Mark the user as onboarded
      description: Mark the user as onboarded, register them with Stream to get chat token
      operationId: userOnboarded
      responses:
        '200':
          description: User Onboarded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
      