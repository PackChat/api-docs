openapi: 3.1.0

info:
  title: packchat live Internal API
  description: API to service packchat live app
  version: 0.1.0
  contact:
    name: packchat
    url: https://www.packchat.com/
    email: hello@packchat.com

servers:
  - url: https://live-staging.packchat.com/api/0.1.0
    description: Staging server
  - url: https://live.packchat.com/api/0.1.0
    description: Production server

security:
  - BearerAuth: []

tags:
  - name: Authentication
    description: Endpoints for user authentication and authorization
  - name: User
    description: Endpoints for user specific actions
  - name: Chats
    description: Endpoints for managing chats
  - name: Public
    description: Endpoints for retreiving public chats
  - name: Notifications
    description: Endpoints for managing notifications
  - name: Questions
    description: Endpoints for managing chat questions
  - name: App
    description: Endpoints for generic app endpoints

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    VerifyOTPRequest:
      type: object
      required:
        - user_uuid
        - otp
      properties:
        user_uuid:
          type: string
          description: Unique identifier of the user
        otp:
          type: string
          description: One-time password to verify

    VerifyOTPResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT authentication token
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3BhY2tjaGF0LWxpdmUudGVzdC9hcGkvMC4xLjAvYXV0aC92ZXJpZnktb3RwIiwiaWF0IjoxNzM2NzI4MTYwLCJleHAiOjE3MzY3MzE3NjAsIm5iZiI6MTczNjcyODE2MCwianRpIjoiMHMzWHlTV1RtUVBoSms2NSIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.Veu17fgYX-gdGx4KwY-mej8YhVOP0KtmtugF7b9ui1Y"

    RequestOTPRequest:
      type: object
      required:
        - phone
        - phone_country
        - device_id
        - device_model
        - device_type
      properties:
        phone:
          type: string
          example: "+447973521888"
          description: Phone number in E.164 format
        phone_country:
          type: string
          example: "GB"
          description: Two-letter ISO country code
        device_id:
          type: string
          description: Unique identifier for the device
        device_model:
          type: string
          description: Model name/identifier of the device
        device_type:
          type: string
          enum: [ios]
          description: Type of device platform

    RequestOTPResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"

    UserResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"
        phone_normalized:
          type: string
          example: "447973521888"
        phone_national:
          type: string
          example: "07973521888"
        phone_e164:
          type: string
          example: "+447973521888"
        phone_hash:
          type: string
          example: "7fcfbad1b738a392f605de34b89555a42c74c76bead7be1d5b3b80fed1edb51f"
        phone_country:
          type: string
          example: "GB"
        verified_at:
          type: string
          format: date-time
          nullable: true
        onboarded_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          example: "2025-01-12T22:31:59.000000Z"
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        name:
          type: string
          example: " "
        chat_token:
          type: string
          example: " "
        display_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        creator_status:
          type: string
          nullable: true
        debug:
          type: object
          properties:
            otp:
              type: string
              example: "123456"

    UserBaseResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"
        chat_token:
          type: string
          example: " "
        display_name:
          type: string
          nullable: true
        avatar_url:
          type: string
          nullable: true
        avatar_thumb_url:
          type: string
          nullable: true

    CreatorResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "aac70dfe-746f-4871-b33d-42b98455762f"
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        name:
          type: string
          example: " "
        display_name:
          type: string
          nullable: true
        blurb:
          type: string
          nullable: true
        debug:
          type: object
          properties:
            otp:
              type: string
              example: "123456"
        social:
          type: object
          properties:
            instagram:
              type: string
              example: '@instagram'
            tiktok:
              type: string
              example: '@tiktok'
            twitter:
              type: string
              example: '@x'

    ChatResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Advanced Trading Techniques"
        slug:
          type: string
          example: "advanced-trading-techniques"
        image_url:
          type: string
          nullable: true
          example: "https://example.com/images/channel.jpg"
        description:
          type: string
          nullable: true
          example: "Learn advanced trading techniques from expert traders"
        status:
          type: string
          enum: [complete, upcoming, creators_missing, in_progress, cancelled]
          example: "upcoming"
        private:
          type: boolean
        session_start:
          type: string
          format: date-time
          example: "2025-02-01T15:00:00.000000Z"
        session_end:
          type: string
          format: date-time
          example: "2025-02-01T16:30:00.000000Z"
        session_duration:
          type: integer
          example: 90
          description: Duration in minutes
        entry_amount:
          $ref: '#/components/schemas/Money'
        currency:
          type: string
          example: "GBP"
        stream_channel_id:
          type: string
          example: "stream_123"
        registration_count:
          type: integer
          example: 10
        max_participants:
          type: integer
          nullable: true
          example: 100
        creators:
          type: array
          items:
            $ref: '#/components/schemas/CreatorResponse'
        created_at:
          type: string
          format: date-time
          example: "2025-01-12T22:31:59.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-01-12T22:31:59.000000Z"

    ChatCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatResponse'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    UpdateNameRequest:
      type: object
      required:
        - first_name
        - last_name
      properties:
        first_name:
          type: string
          minLength: 2
          maxLength: 50
          example: "John"
        last_name:
          type: string
          minLength: 2
          maxLength: 50
          example: "Smith"

    UpdateDisplayNameRequest:
      type: object
      required:
        - first_name
        - last_name
      properties:
        display_name:
          type: string
          minLength: 2
          maxLength: 50
          example: "John Doe"

    ChatUserResource:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        image_url:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          enum: [ complete, upcoming, creators_missing, in_progress, cancelled ]
          example: "upcoming"
        private:
          type: boolean
        session_start:
          type: string
          format: date-time
        session_end:
          type: string
          format: date-time
        session_duration:
          type: integer
        entry_amount:
          $ref: '#/components/schemas/Money'
        currency:
          type: string
        stream_channel_id:
          type: string
        registration_count:
          type: integer
        max_participants:
          type: integer
          nullable: true
        creators:
          type: array
          items:
            $ref: '#/components/schemas/CreatorResponse'
        blocked_at:
          type: string
          format: date-time
          nullable: true
        is_blocked:
          type: boolean
        feedback:
          type: string
          nullable: true
        feedback_given_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PublicChatResource:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        image_url:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          enum: [ complete, upcoming, creators_missing, in_progress, cancelled ]
          example: "upcoming"
        private:
          type: boolean
        session_start:
          type: string
          format: date-time
        session_end:
          type: string
          format: date-time
        session_duration:
          type: integer
        entry_amount:
          $ref: '#/components/schemas/Money'
        currency:
          type: string
        registration_count:
          type: integer
        max_participants:
          type: integer
          nullable: true
        creators:
          type: array
          items:
            $ref: '#/components/schemas/CreatorResponse'

    PublicTopCreatorsCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreatorResponse'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    PublicChatCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PublicChatResource'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    PaginationLinks:
      type: object
      properties:
        first:
          type: string
        last:
          type: string
        prev:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        links:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                nullable: true
              label:
                type: string
              active:
                type: boolean
        path:
          type: string
        per_page:
          type: integer
          example: 15
        to:
          type: integer
          example: 10
        total:
          type: integer
          example: 10
    Money:
      type: object
      properties:
        amount:
          type: integer
          example: 1999
          description: Amount in smallest currency unit (e.g. cents)
        amount_decimal:
          type: number
          format: float
          example: 19.99
          description: Amount in decimal format
        currency:
          type: string
          example: "USD"
          description: Three-letter currency code
        formatted:
          type: string
          example: "USD 19.99"
          description: Full formatted amount with currency code
        formatted_symbol:
          type: string
          example: "$19.99"
          description: Formatted amount with currency symbol
    CreateNotificationDeviceTokenRequest:
      type: object
      required:
        - token
        - device_type
      properties:
        token:
          type: string
          description: Notification device token
        device_type:
          type: string
          description: Type of the device
        live:
          type: boolean
          default: false
          description: Whether this is a live token
        name:
          type: string
          nullable: true
          description: Optional name for the device token

    CreateNotificationData:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Notification title
        body:
          type: string
          nullable: true
          description: Notification Body
        apn_category:
          type: string
          nullable: true
          description: APN category for the notification
        apn_type:
          type: string
          nullable: true
          default: "alert"
          description: APN type (alert/live)
        fcm_topic:
          type: string
          nullable: true
          description: FCM topic for the notification

    CreateQuestionData:
      type: object
      properties:
        question:
          type: string
          description: Question to ask

    CreateQuestionReplyData:
      type: object
      properties:
        message:
          type: string
          description: message for reply

    CreateQuestionAnswerData:
      type: object
      properties:
        message:
          type: string
          description: message for reply

    ChatQuestionCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatQuestion'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    ChatQuestion:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: Unique identifier for the chat question
          example: "123e4567-e89b-12d3-a456-426614174000"
        question:
          type: string
          description: The text content of the question
          example: "What are your thoughts on the presentation?"
        stream_message_id:
          type: string
          description: Identifier for the associated stream message
          example: "message-123456"
        reply_count:
          type: integer
          format: int32
          description: Number of replies to this question
          example: 5
        user:
          $ref: '#/components/schemas/UserBaseResponse'
          description: The user who posted the question
        chat:
          $ref: '#/components/schemas/ChatResponse'
          description: The chat this question belongs to
        vote_count:
          type: integer
          format: int32
          description: Number of votes this question has received
          example: 12
        created_at:
          type: string
          format: date-time
          description: When the question was created
          example: "2023-01-15T14:30:00+00:00"
        updated_at:
          type: string
          format: date-time
          description: When the question was last updated
          example: "2023-01-15T14:45:00+00:00"

    ChatQuestionVoteCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatQuestionVotes'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    ChatQuestionVotes:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserBaseResponse'
          description: The user who posted the question
        voted_at:
          type: string
          format: date-time
          description: When the vote was created
          example: "2023-01-15T14:30:00+00:00"

    ChatQuestionLimitResource:
      type: object
      properties:
        current_count:
          type: integer
          description: How many questions have been asked on this chat by authenticated user
        max_count:
          type: integer
          description: Max limit of questions that can be asked per chat

    UpdateOnboardingSocialChannelRequest:
      type: object
      required:
        - channel
        - handle
      properties:
        channel:
          type: string
          description: The social media platform
          enum:
            - tiktok
            - threads
            - twitter
            - instagram
            - youtube
            - twitch
          example: "twitter"
        handle:
          type: string
          description: The user's handle or username on the platform
          example: "@johndoe"

    UpdateCreatorStatusRequest:
      type: object
      required:
        - date_time_field
        - value
      properties:
        date_time_field:
          type: string
          description: The status field to update
          enum:
            - creator_pending_at
            - creator_approved_at
            - creator_denied_at
          example: "creator_approved_at"
        value:
          type: string
          format: date-time
          description: The timestamp to set for the specified field
          example: "2023-12-15T14:30:00Z"
    CreateAppFeedbackRequest:
      type: object
      required:
        - feedback
      properties:
        feedback:
          type: string
          description: The user's feedback message about the application
          example: "I love the new user interface, but found a small bug in the chat feature."
    SubmitCreatorSuggestionRequest:
      type: object
      required:
        - suggestions
      properties:
        suggestions:
          type: array
          description: An array of creator suggestions
          minItems: 1
          items:
            type: string
            description: A creator suggestion, which could be an email, username, or name
          example: ["john.doe@example.com", "@famous_creator"]

paths:
  /auth/request-otp:
    post:
      tags:
        - Authentication
      summary: Request an OTP for phone verification
      description: Initiates the phone verification process by requesting a one-time password
      operationId: requestOTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOTPRequest'
      responses:
        '200':
          description: OTP request successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestOTPResponse'
        '400':
          description: Invalid request parameters
        '429':
          description: Too many requests
  /auth/verify-otp:
    post:
      tags:
        - Authentication
      summary: Verify OTP and get authentication token
      description: Verifies the one-time password and returns a JWT token for authentication
      operationId: verifyOTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTPRequest'
      responses:
        '200':
          description: OTP verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTPResponse'
        '400':
          description: Invalid request parameters
        '401':
          description: Invalid OTP
        '422':
          description: User not found
        '429':
          description: Too many requests

  /users/me:
    get:
      tags:
        - User
      summary: Get the currently authenticated user object
      description: Returns the currently authenticated user object with all properties.
      operationId: usersMe
      responses:
        '200':
          description: OTP verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /users/me/chats:
    get:
      tags:
        - User
      summary: List all users chats
      description: Returns a paginated list of chats, with optional filtering for the authenticated user
      operationId: listUserChats
      parameters:
        - in: query
          name: filter[status]
          schema:
            type: string
            enum: [complete, upcoming, creators_missing, in_progress, cancelled]
          description: Filter by chat status
        - in: query
          name: filter[stream_channel_id]
          schema:
            type: string
          description: Filter by GetStream Channel UUID
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUserResource'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized

  /chats:
    get:
      tags:
        - Chats
      summary: List all chats
      description: Returns a paginated list of chats, with optional filtering
      operationId: listChats
      parameters:
        - in: query
          name: filter[status]
          schema:
            type: string
            enum: [complete, upcoming, creators_missing, in_progress, cancelled]
          description: Filter by chat status
        - in: query
          name: filter[stream_channel_id]
          schema:
            type: string
          description: Filter by GetStream Channel UUID
        - in: query
          name: filter[only_participating]
          schema:
            type: boolean
          description: 1 or 0. Optional filter to only return chats the authenticated user is a creator or participant of
        - in: query
          name: filter[except_participating]
          schema:
            type: boolean
          description: 1 or 0. Optional filter to only return chats the authenticated user is NOT a creator or participant of
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCollection'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized

  /chats/{uuid}:
    get:
      tags:
        - Chats
      summary: Get a specific chat
      description: Returns detailed information about a specific chat
      operationId: getChat
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the channel
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized
        '404':
          description: Chat not found

  /users/me/name:
    put:
      tags:
        - User
      summary: Update user's name
      description: Updates the authenticated user's first and last name
      operationId: updateUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNameRequest'
      responses:
        '200':
          description: Name updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /users/me/display-name:
    put:
      tags:
        - User
      summary: Update user's display name
      description: Updates the authenticated user's display name
      operationId: updateUserDisplayName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDisplayNameRequest'
      responses:
        '200':
          description: Name updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors


  /users/me/avatar:
    post:
      tags:
        - User
      summary: Upload or update user's avatar
      description: Updates the authenticated user's avatar image
      operationId: updateUserAvatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - avatar
              properties:
                avatar:
                  type: string
                  format: binary
                  description: Image file (JPEG, PNG, or WebP)
      responses:
        '200':
          description: Avatar updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
                    properties:
                      avatar:
                        type: array
                        items:
                          type: string
                        example:
                          - "The avatar field must be an image."
                          - "The avatar field must not be greater than 5MB."
                          - "The avatar must be at least 100x100 pixels."

  /users/me/onboarded:
    post:
      tags:
        - User
      summary: Mark the user as onboarded
      description: Mark the user as onboarded, register them with Stream to get chat token
      operationId: userOnboarded
      responses:
        '200':
          description: User Onboarded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
  /users/me/chats/{uuid}/block:
    post:
      tags:
        - Chats
      summary: Block a chat for the authenticated user
      description: Block a chat for the authenticated user
      operationId: blockChat
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Chat blocked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUserResource'
        '404':
          description: Chat not found or user not a participant

    delete:
      tags:
        - Chats
      summary: Unblock a chat for the authenticated user
      description: Unblock a chat for the authenticated user
      operationId: unblockChat
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Chat unblocked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUserResource'
        '404':
          description: Chat not found or user not a participant

  /users/me/chats/{uuid}/feedback:
    post:
      tags:
        - Chats
      summary: Submit feedback for a chat
      description: Submit feedback for a chat
      operationId: submitChatFeedback
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - feedback
              properties:
                feedback:
                  type: string
                  minLength: 10
      responses:
        '200':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUserResource'
        '404':
          description: Chat not found or user not a participant
        '422':
          description: Validation errors
  /users/me/chats/{uuid}/join:
    post:
      tags:
        - Chats
      summary: Join a free chat
      description: Join a chat that is free
      operationId: joinFreeChat
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Chat joined successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUserResource'
        '404':
          description: Chat not found or user not found
        '422':
          description: Validation errors
  /public/chats:
    get:
      tags:
        - Public
      summary: List public chats
      description: Returns a paginated list of public chats
      operationId: listPublicChats
      parameters:
        - in: query
          name: filter[status]
          schema:
            type: string
            enum: [ draft, published, cancelled ]
          description: Filter by chat status
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicChatCollection'

  /public/chats/{uuid}:
    get:
      tags:
        - Public
      summary: Get a specific public chat
      description: Returns detailed information about a specific public chat
      operationId: getPublicChat
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicChatResource'
        '404':
          description: Chat not found
  /notification/device/token:
    post:
      tags:
        - Notifications
      summary: Store notification device token
      description: Stores a new notification device token for the authenticated user
      operationId: storeNotificationDeviceToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationDeviceTokenRequest'
      responses:
        '204':
          description: Token stored successfully
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

    delete:
      tags:
        - User
      summary: Delete all notification device tokens
      description: Deletes all notification device tokens for the authenticated user
      operationId: deleteNotificationDeviceTokens
      responses:
        '204':
          description: Tokens deleted successfully
        '401':
          description: Unauthenticated

  /notification:
    post:
      tags:
        - Notifications
      summary: Send notification on APN & FCM
      description: Queues a job to send the notification to send to APN and FCM if tokens available
      operationId: sendNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationData'
      responses:
        '204':
          description: Notification Queued successfully
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/questions:
    get:
      tags:
        - Questions
      summary: Get all given questions for a chat
      description: Get all given questions for a chat.
      operationId: getChatQuestions
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
      responses:
        '200':
          description: Paginated list of questions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatQuestionCollection'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/questions/limit:
    get:
      tags:
        - Questions
      summary: Get limit for authenticated user for question count
      description: Get limit for authenticated user for question count
      operationId: getChatQuestionLimit
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
      responses:
        '200':
          description: Limit state for questions asked by user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatQuestionLimitResource'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/question:
    post:
      tags:
        - Questions
      summary: Create a question for a chat
      description: Creates a question in the DB for the given chat and sends the question to GetStream
      operationId: createChatQuestion
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionData'
      responses:
        '200':
          description: Question created and sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatQuestion'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/questions/{chat_question_uuid}/votes:
    get:
      tags:
        - Questions
      summary: Get all given votes for a question
      description: Get all given votes for a question, who made them and when.
      operationId: getChatQuestionVotes
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
        - in: path
          name: chat_question_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat question
        - in: query
          name: filter[user_id]
          required: false
          schema:
            type: string
            format: uuid
          description: Filter votes by user UUID
      responses:
        '200':
          description: Paginated list of question upvotes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatQuestionVoteCollection'
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/questions/{chat_question_uuid}/upvote:
    post:
      tags:
        - Questions
      summary: Create an upvote for a given question for a chat
      description: Creates an upvote record for a given question in the DB for the given chat
      operationId: createChatQuestionUpvote
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
        - in: path
          name: chat_question_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat question
      responses:
        '204':
          description: Question upvote created and sent successfully
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/questions/{chat_question_uuid}/downvote:
    post:
      tags:
        - Questions
      summary: Create an downvote for a given question for a chat
      description: Creates an downvote record for a given question in the DB for the given chat
      operationId: createChatQuestionDownvote
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
        - in: path
          name: chat_question_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat question
      responses:
        '204':
          description: Question downvote created and sent successfully
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors

  /chats/{chat_uuid}/questions/{chat_question_uuid}/reply:
    post:
      tags:
        - Questions
      summary: Create a reply for a question for a chat
      description: Creates a reply for a question in the DB for the given chat and sends the reply to GetStreamss parent message
      operationId: createChatQuestionReply
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
        - in: path
          name: chat_question_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionReplyData'
      responses:
        '204':
          description: Question reply created and sent successfully
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors
  /chats/{chat_uuid}/questions/{chat_question_uuid}/answer:
    post:
      tags:
        - Questions
      summary: Create an answer for a question for a chat
      description: Creates an answer for a question in the DB for the given chat and sends the reply to GetStream as a quote message
      operationId: createChatQuestionAnswer
      parameters:
        - in: path
          name: chat_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat
        - in: path
          name: chat_question_uuid
          required: true
          schema:
            type: string
            format: uuid
          description: UUID of the chat question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionAnswerData'
      responses:
        '204':
          description: Question answer created and sent successfully
        '401':
          description: Unauthenticated
        '422':
          description: Validation errors
  /users/me/email:
    put:
      summary: Update user email
      description: Updates the authenticated users email address and notifies Stream Chat of the change
      operationId: updateUserEmail
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: The new email address for the user
                  example: "user@example.com"
            examples:
              updateEmail:
                value:
                  email: "jane.smith@example.com"
        required: true
      responses:
        '200':
          description: Email updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token not provided"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: "The email must be a valid email address."
  /users/me/onboarding-social:
    put:
      summary: Update user's social media channel
      description: Updates the authenticated user's social media channel information during onboarding
      operationId: updateOnboardingSocialChannel
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOnboardingSocialChannelRequest'
            examples:
              twitter:
                value:
                  channel: "twitter"
                  handle: "@johndoe"
              instagram:
                value:
                  channel: "instagram"
                  handle: "john.doe"
        required: true
      responses:
        '200':
          description: Social media channel updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token not provided"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      channel:
                        type: array
                        items:
                          type: string
                          example: "The selected channel is invalid."
                      handle:
                        type: array
                        items:
                          type: string
                          example: "The handle field is required."
  /users/me/creator-status:
    put:
      summary: Update user creator status
      description: Updates the authenticated user's creator status by setting a specific date-time field
      operationId: updateCreatorStatus
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreatorStatusRequest'
            examples:
              creatorPending:
                value:
                  date_time_field: "creator_pending_at"
                  value: "2023-12-01T12:00:00Z"
              creatorApproved:
                value:
                  date_time_field: "creator_approved_at"
                  value: "2023-12-15T14:30:00Z"
              creatorDenied:
                value:
                  date_time_field: "creator_denied_at"
                  value: "2023-12-10T09:15:00Z"
        required: true
      responses:
        '200':
          description: Creator status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token not provided"
                  code:
                    type: string
                    example: "INVALID_SESSION"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      date_time_field:
                        type: array
                        items:
                          type: string
                          example: "The selected date time field is invalid."
                      value:
                        type: array
                        items:
                          type: string
                          example: "The value must be a valid date."
  /feedback:
    post:
      summary: Submit app feedback
      description: Allows authenticated users to submit feedback about the application
      operationId: createAppFeedback
      tags:
        - App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppFeedbackRequest'
            examples:
              basicFeedback:
                value:
                  feedback: "I love the new user interface, but found a small bug in the chat feature."
        required: true
      responses:
        '204':
          description: Feedback submitted successfully
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token not provided"
                  code:
                    type: string
                    example: "INVALID_SESSION"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      feedback:
                        type: array
                        items:
                          type: string
                          example: "The feedback field is required."
  /creator-suggestions:
    post:
      summary: Submit creator suggestions
      description: Allows authenticated users to submit one or more creator suggestions
      operationId: submitCreatorSuggestions
      tags:
        - App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCreatorSuggestionRequest'
            examples:
              multipleSuggestions:
                value:
                  suggestions: [
                    "john.doe@example.com",
                    "@famous_creator",
                    "Creator Name"
                  ]
              singleSuggestion:
                value:
                  suggestions: [
                    "jane.smith@example.com"
                  ]
        required: true
      responses:
        '204':
          description: Creator suggestions submitted successfully
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token not provided"
                  code:
                    type: string
                    example: "INVALID_SESSION"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The given data was invalid."
                  errors:
                    type: object
                    properties:
                      suggestions:
                        type: array
                        items:
                          type: string
                          example: "The suggestions field is required."
                      "suggestions.0":
                        type: array
                        items:
                          type: string
                          example: "The suggestions.0 field is required."
  /public/top-creators:
    get:
      tags:
        - Public
      summary: Public endpoint to list top creators
      description: Returns a paginated list of top creators
      operationId: listTopCreators
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicTopCreatorsCollection'